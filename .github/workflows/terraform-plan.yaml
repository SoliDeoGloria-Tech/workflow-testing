name: Terraform Plan

permissions:
  contents: read
  pull-requests: write # Required to update the PR with run details
  id-token: write # Required for OIDC authentication

on:
  workflow_call:

jobs:
  plan:
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2 # v3 uses NodeJS 20

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out=tfplan
        continue-on-error: true

      - name: Terraform Show
        id: show
        run: terraform show -no-color tfplan

      - name: Post Plan as Comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // 1. Retrieve existing bot comments for the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('Terraform Plan')
            })

            // 2. Prepare format of the comment
            const output = `#### Terraform Plan
            \`\`\`\n
            ${{ steps.show.outputs.stdout }}
            \`\`\`
            `;

            // 3. If we have a comment, update it, otherwise create a new one
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }

      - name: Setup Infracost
        if: env.INFRACOST_API_KEY
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
          currency: AUD

      - name: Add Infracost Details as Comment
        if: env.INFRACOST_API_KEY
        run: |
          terraform show -json tfplan | tee ${{ runner.temp }}/plan.json
          infracost breakdown --path ${{ runner.temp }}/plan.json \
                              --format json \
                              --out-file=${{ runner.temp }}/infracost.json
          infracost comment github --path=${{ runner.temp }}/infracost.json \
                                     --repo=${{ github.repository }} \
                                     --github-token=${{ secrets.GITHUB_TOKEN }} \
                                     --pull-request=${{ github.event.pull_request.number }} \
                                     --behavior=update
